{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/2023 projects/chat-app/src/components/Chats.jsx\",\n  _s = $RefreshSig$();\nimport { doc, onSnapshot, collection, addDoc, query, orderBy, limit } from 'firebase/firestore';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Saved from '../img/saved.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  var _Object$entries;\n  const [chats, setChats] = useState([]);\n  const [savedChatId, setSavedChatId] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    dispatch\n  } = useContext(ChatContext);\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, 'userChats', currentUser.uid), doc => {\n        setChats(doc.data());\n      });\n      return () => {\n        unsub();\n      };\n    };\n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n  useEffect(() => {\n    const getSavedChatId = async () => {\n      const q = query(collection(db, 'userChats', currentUser.uid, 'chats'), orderBy('date', 'desc'), limit(1));\n      const querySnapshot = await onSnapshot(q, querySnapshot => {\n        var _querySnapshot$docs$;\n        const chatId = (_querySnapshot$docs$ = querySnapshot.docs[0]) === null || _querySnapshot$docs$ === void 0 ? void 0 : _querySnapshot$docs$.id;\n        if (chatId && chatId !== savedChatId) {\n          setSavedChatId(chatId);\n        }\n      });\n      return () => {\n        querySnapshot();\n      };\n    };\n    currentUser.uid && getSavedChatId();\n  }, [currentUser.uid, savedChatId]);\n  const handleSelect = u => {\n    dispatch({\n      type: 'CHANGE_USER',\n      payload: u\n    });\n  };\n  const handleSaveMessage = async text => {\n    if (!savedChatId) {\n      // create saved chat\n      const chatRef = await addDoc(collection(db, 'chats'), {\n        users: [currentUser.uid],\n        messages: []\n      });\n      const chatId = chatRef.id;\n\n      // add saved chat to user's chats\n      await setDoc(doc(db, 'userChats', currentUser.uid, 'chats', chatId), {\n        userInfo: {\n          displayName: 'Saved',\n          photoURL: Saved,\n          uid: 'saved'\n        },\n        date: new Date(),\n        lastMessage: null\n      });\n      setSavedChatId(chatId);\n    }\n\n    // add message to saved chat\n    await setDoc(doc(db, 'chats', savedChatId, 'messages', new Date().toISOString()), {\n      text,\n      sender: currentUser.uid,\n      date: new Date()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: () => handleSelect({\n        displayName: 'Saved',\n        photoURL: Saved,\n        uid: 'saved'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Saved,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Saved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), (_Object$entries = Object.entries(chats)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.sort((a, b) => b[1].date - a[1].date).map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: () => handleSelect({\n        displayName: chat[1].userInfo.displayName,\n        photoURL: chat[1].userInfo.photoURL,\n        uid: chat[0]\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: chat[1].userInfo.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: chat[1].userInfo.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), chat[1].lastMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: chat[1].lastMessage.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this)]\n    }, chat[0], true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saveMessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message\",\n        onKeyDown: e => e.key === 'Enter' && handleSaveMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSaveMessage(document.querySelector('.saveMessage input').value),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"IeJzazEIjZa1WgkIYzzZBqZ8Z38=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["doc","onSnapshot","collection","addDoc","query","orderBy","limit","React","useContext","useEffect","useState","AuthContext","ChatContext","db","Saved","jsxDEV","_jsxDEV","Chats","_s","_Object$entries","chats","setChats","savedChatId","setSavedChatId","currentUser","dispatch","getChats","unsub","uid","data","getSavedChatId","q","querySnapshot","_querySnapshot$docs$","chatId","docs","id","handleSelect","u","type","payload","handleSaveMessage","text","chatRef","users","messages","setDoc","userInfo","displayName","photoURL","date","Date","lastMessage","toISOString","sender","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","sort","a","b","map","chat","placeholder","onKeyDown","e","key","target","value","document","querySelector","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/2023 projects/chat-app/src/components/Chats.jsx"],"sourcesContent":["import { doc, onSnapshot, collection, addDoc, query, orderBy, limit } from 'firebase/firestore';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Saved from '../img/saved.jpeg';\n\nconst Chats = () => {\n  const [chats, setChats] = useState([]);\n  const [savedChatId, setSavedChatId] = useState('');\n\n  const { currentUser } = useContext(AuthContext);\n  const { dispatch } = useContext(ChatContext);\n\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, 'userChats', currentUser.uid), (doc) => {\n        setChats(doc.data());\n      });\n\n      return () => {\n        unsub();\n      };\n    };\n\n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n\n  useEffect(() => {\n    const getSavedChatId = async () => {\n      const q = query(\n        collection(db, 'userChats', currentUser.uid, 'chats'),\n        orderBy('date', 'desc'),\n        limit(1),\n      );\n      const querySnapshot = await onSnapshot(q, (querySnapshot) => {\n        const chatId = querySnapshot.docs[0]?.id;\n        if (chatId && chatId !== savedChatId) {\n          setSavedChatId(chatId);\n        }\n      });\n\n      return () => {\n        querySnapshot();\n      };\n    };\n\n    currentUser.uid && getSavedChatId();\n  }, [currentUser.uid, savedChatId]);\n\n  const handleSelect = (u) => {\n    dispatch({ type: 'CHANGE_USER', payload: u });\n  };\n\n  const handleSaveMessage = async (text) => {\n    if (!savedChatId) {\n      // create saved chat\n      const chatRef = await addDoc(collection(db, 'chats'), {\n        users: [currentUser.uid],\n        messages: [],\n      });\n      const chatId = chatRef.id;\n\n      // add saved chat to user's chats\n      await setDoc(doc(db, 'userChats', currentUser.uid, 'chats', chatId), {\n        userInfo: {\n          displayName: 'Saved',\n          photoURL: Saved,\n          uid: 'saved',\n        },\n        date: new Date(),\n        lastMessage: null,\n      });\n\n      setSavedChatId(chatId);\n    }\n\n    // add message to saved chat\n    await setDoc(doc(db, 'chats', savedChatId, 'messages', new Date().toISOString()), {\n      text,\n      sender: currentUser.uid,\n      date: new Date(),\n    });\n  };\n\n  return (\n    <div className=\"chats\">\n      <div\n        className=\"userChat\"\n        onClick={() => handleSelect({ displayName: 'Saved', photoURL: Saved, uid: 'saved' })}>\n        <img src={Saved} alt=\"\" />\n        <div className=\"userChatInfo\">\n          <span>Saved</span>\n          <p></p>\n        </div>\n      </div>\n      {Object.entries(chats)\n        ?.sort((a, b) => b[1].date - a[1].date)\n        .map((chat) => (\n          <div\n            className=\"userChat\"\n            key={chat[0]}\n            onClick={() =>\n              handleSelect({\n                displayName: chat[1].userInfo.displayName,\n                photoURL: chat[1].userInfo.photoURL,\n                uid: chat[0],\n              })\n            }>\n            <img src={chat[1].userInfo.photoURL} alt=\"\" />\n            <div className=\"userChatInfo\">\n              <span>{chat[1].userInfo.displayName}</span>\n              {chat[1].lastMessage && <p>{chat[1].lastMessage.text}</p>}\n            </div>\n          </div>\n        ))}\n      <div className=\"saveMessage\">\n        <input\n          type=\"text\"\n          placeholder=\"Type a message\"\n          onKeyDown={(e) => e.key === 'Enter' && handleSaveMessage(e.target.value)}\n        />\n        <button\n          onClick={() => handleSaveMessage(document.querySelector('.saveMessage input').value)}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}