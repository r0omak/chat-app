{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/2023 projects/chat-app/src/components/Input.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [img, setImg] = useState(null);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    data\n  } = useContext(ChatContext);\n  const handleSend = async () => {\n    if (!text.trim()) {\n      // Викидаємо з функції, якщо текст порожній або містить тільки пробіли\n      return;\n    }\n    if (img) {\n      const storageRef = ref(storage, uuid());\n      const uploadTask = uploadBytesResumable(storageRef, img);\n      uploadTask.on(error => {\n        //TODO:Handle Error\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(async downloadURL => {\n          await updateDoc(doc(db, 'chats', data.chatId), {\n            messages: arrayUnion({\n              id: uuid(),\n              text,\n              senderId: currentUser.uid,\n              date: Timestamp.now(),\n              img: downloadURL\n            })\n          });\n        });\n      });\n    } else {\n      await updateDoc(doc(db, 'chats', data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now()\n        })\n      });\n    }\n    await updateDoc(doc(db, 'userChats', currentUser.uid), {\n      [data.chatId + '.lastMessage']: {\n        text\n      },\n      [data.chatId + '.date']: serverTimestamp()\n    });\n    await updateDoc(doc(db, 'userChats', data.user.uid), {\n      [data.chatId + '.lastMessage']: {\n        text\n      },\n      [data.chatId + '.date']: serverTimestamp()\n    });\n    setText('');\n    setImg(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type something...\",\n      onChange: e => setText(e.target.value),\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        id: \"file\",\n        onChange: e => setImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"xUXtEpx9JxtPfIo1zjYBJEzVi+M=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Input","_s","text","setText","useState","img","setImg","currentUser","useContext","AuthContext","data","ChatContext","handleSend","trim","storageRef","ref","storage","uuid","uploadTask","uploadBytesResumable","on","error","getDownloadURL","snapshot","then","downloadURL","updateDoc","doc","db","chatId","messages","arrayUnion","id","senderId","uid","date","Timestamp","now","serverTimestamp","user","_jsxDEV","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","style","display","files","htmlFor","src","Img","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/2023 projects/chat-app/src/components/Input.jsx"],"sourcesContent":["const Input = () => {\n  const [text, setText] = useState('');\n  const [img, setImg] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n  const { data } = useContext(ChatContext);\n\n  const handleSend = async () => {\n    if (!text.trim()) {\n      // Викидаємо з функції, якщо текст порожній або містить тільки пробіли\n      return;\n    }\n\n    if (img) {\n      const storageRef = ref(storage, uuid());\n\n      const uploadTask = uploadBytesResumable(storageRef, img);\n\n      uploadTask.on(\n        (error) => {\n          //TODO:Handle Error\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n            await updateDoc(doc(db, 'chats', data.chatId), {\n              messages: arrayUnion({\n                id: uuid(),\n                text,\n                senderId: currentUser.uid,\n                date: Timestamp.now(),\n                img: downloadURL,\n              }),\n            });\n          });\n        },\n      );\n    } else {\n      await updateDoc(doc(db, 'chats', data.chatId), {\n        messages: arrayUnion({\n          id: uuid(),\n          text,\n          senderId: currentUser.uid,\n          date: Timestamp.now(),\n        }),\n      });\n    }\n\n    await updateDoc(doc(db, 'userChats', currentUser.uid), {\n      [data.chatId + '.lastMessage']: {\n        text,\n      },\n      [data.chatId + '.date']: serverTimestamp(),\n    });\n\n    await updateDoc(doc(db, 'userChats', data.user.uid), {\n      [data.chatId + '.lastMessage']: {\n        text,\n      },\n      [data.chatId + '.date']: serverTimestamp(),\n    });\n\n    setText('');\n    setImg(null);\n  };\n\n  return (\n    <div className=\"input\">\n      <input\n        type=\"text\"\n        placeholder=\"Type something...\"\n        onChange={(e) => setText(e.target.value)}\n        value={text}\n      />\n      <div className=\"send\">\n        <input\n          type=\"file\"\n          style={{ display: 'none' }}\n          id=\"file\"\n          onChange={(e) => setImg(e.target.files[0])}\n        />\n        <label htmlFor=\"file\">\n          <img src={Img} alt=\"\" />\n        </label>\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";;;AAAA,MAAMA,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGF,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAM;IAAEG;EAAY,CAAC,GAAGC,UAAU,CAACC,WAAW,CAAC;EAC/C,MAAM;IAAEC;EAAK,CAAC,GAAGF,UAAU,CAACG,WAAW,CAAC;EAExC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACV,IAAI,CAACW,IAAI,EAAE,EAAE;MAChB;MACA;IACF;IAEA,IAAIR,GAAG,EAAE;MACP,MAAMS,UAAU,GAAGC,GAAG,CAACC,OAAO,EAAEC,IAAI,EAAE,CAAC;MAEvC,MAAMC,UAAU,GAAGC,oBAAoB,CAACL,UAAU,EAAET,GAAG,CAAC;MAExDa,UAAU,CAACE,EAAE,CACVC,KAAK,IAAK;QACT;MAAA,CACD,EACD,MAAM;QACJC,cAAc,CAACJ,UAAU,CAACK,QAAQ,CAACR,GAAG,CAAC,CAACS,IAAI,CAAC,MAAOC,WAAW,IAAK;UAClE,MAAMC,SAAS,CAACC,GAAG,CAACC,EAAE,EAAE,OAAO,EAAElB,IAAI,CAACmB,MAAM,CAAC,EAAE;YAC7CC,QAAQ,EAAEC,UAAU,CAAC;cACnBC,EAAE,EAAEf,IAAI,EAAE;cACVf,IAAI;cACJ+B,QAAQ,EAAE1B,WAAW,CAAC2B,GAAG;cACzBC,IAAI,EAAEC,SAAS,CAACC,GAAG,EAAE;cACrBhC,GAAG,EAAEoB;YACP,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CACF;IACH,CAAC,MAAM;MACL,MAAMC,SAAS,CAACC,GAAG,CAACC,EAAE,EAAE,OAAO,EAAElB,IAAI,CAACmB,MAAM,CAAC,EAAE;QAC7CC,QAAQ,EAAEC,UAAU,CAAC;UACnBC,EAAE,EAAEf,IAAI,EAAE;UACVf,IAAI;UACJ+B,QAAQ,EAAE1B,WAAW,CAAC2B,GAAG;UACzBC,IAAI,EAAEC,SAAS,CAACC,GAAG;QACrB,CAAC;MACH,CAAC,CAAC;IACJ;IAEA,MAAMX,SAAS,CAACC,GAAG,CAACC,EAAE,EAAE,WAAW,EAAErB,WAAW,CAAC2B,GAAG,CAAC,EAAE;MACrD,CAACxB,IAAI,CAACmB,MAAM,GAAG,cAAc,GAAG;QAC9B3B;MACF,CAAC;MACD,CAACQ,IAAI,CAACmB,MAAM,GAAG,OAAO,GAAGS,eAAe;IAC1C,CAAC,CAAC;IAEF,MAAMZ,SAAS,CAACC,GAAG,CAACC,EAAE,EAAE,WAAW,EAAElB,IAAI,CAAC6B,IAAI,CAACL,GAAG,CAAC,EAAE;MACnD,CAACxB,IAAI,CAACmB,MAAM,GAAG,cAAc,GAAG;QAC9B3B;MACF,CAAC;MACD,CAACQ,IAAI,CAACmB,MAAM,GAAG,OAAO,GAAGS,eAAe;IAC1C,CAAC,CAAC;IAEFnC,OAAO,CAAC,EAAE,CAAC;IACXG,MAAM,CAAC,IAAI,CAAC;EACd,CAAC;EAED,oBACEkC,OAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBF,OAAA;MACEG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,mBAAmB;MAC/BC,QAAQ,EAAGC,CAAC,IAAK3C,OAAO,CAAC2C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MACzCA,KAAK,EAAE9C;IAAK;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACZ,eACFZ,OAAA;MAAKC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBF,OAAA;QACEG,IAAI,EAAC,MAAM;QACXU,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAO,CAAE;QAC3BtB,EAAE,EAAC,MAAM;QACTa,QAAQ,EAAGC,CAAC,IAAKxC,MAAM,CAACwC,CAAC,CAACC,MAAM,CAACQ,KAAK,CAAC,CAAC,CAAC;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C,eACFZ,OAAA;QAAOgB,OAAO,EAAC,MAAM;QAAAd,QAAA,eACnBF,OAAA;UAAKiB,GAAG,EAAEC,GAAI;UAACC,GAAG,EAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB,eACRZ,OAAA;QAAQoB,OAAO,EAAEhD,UAAW;QAAA8B,QAAA,EAAC;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACnD,EAAA,CAvFID,KAAK;AAAA6D,EAAA,GAAL7D,KAAK;AAyFX,eAAeA,KAAK;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}