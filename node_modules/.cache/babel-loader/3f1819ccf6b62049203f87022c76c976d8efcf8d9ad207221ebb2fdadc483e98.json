{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/2023 projects/chat-app/src/components/Chats.jsx\",\n  _s = $RefreshSig$();\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Saved from '../img/saved.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  var _Object$entries;\n  const [chats, setChats] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const {\n    dispatch\n  } = useContext(ChatContext);\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, 'userChats', currentUser.uid), doc => {\n        setChats(doc.data());\n      });\n      return () => {\n        unsub();\n      };\n    };\n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n  const handleSelect = u => {\n    dispatch({\n      type: 'CHANGE_USER',\n      payload: u\n    });\n  };\n  const handleCreateChat = async () => {\n    const chatId = `${currentUser.uid}-${currentUser.uid}`;\n\n    // Create a new chat document in Firestore's \"chats\" collection with an empty \"messages\" array and a single user ID\n    await setDoc(doc(db, 'chats', chatId), {\n      messages: [],\n      users: [currentUser.uid]\n    });\n\n    // Create a new chat document in the \"userChats\" subcollection of the current user's document, with their display name, photo URL, and user ID\n    await setDoc(doc(db, 'userChats', currentUser.uid, 'chats', chatId), {\n      userInfo: {\n        displayName: currentUser.displayName,\n        photoURL: currentUser.photoURL,\n        uid: currentUser.uid\n      },\n      lastMessage: null\n    });\n\n    // Update the local \"chats\" state with the newly created chat\n    setChats(prevChats => {\n      const updatedChats = {\n        ...prevChats\n      };\n      updatedChats[chatId] = {\n        userInfo: {\n          displayName: currentUser.displayName,\n          photoURL: currentUser.photoURL,\n          uid: currentUser.uid\n        },\n        lastMessage: null\n      };\n      return updatedChats;\n    });\n\n    // Select the newly created chat by dispatching a \"CHANGE_USER\" action with the chat's user object\n    dispatch({\n      type: 'CHANGE_USER',\n      payload: {\n        uid: currentUser.uid,\n        displayName: currentUser.displayName,\n        photoURL: currentUser.photoURL\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chats\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Saved,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), (_Object$entries = Object.entries(chats)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.sort((a, b) => b[1].date - a[1].date).map(chat => {\n      var _chat$1$lastMessage;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChat\",\n        onClick: () => handleSelect(chat[1].userInfo),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: chat[1].userInfo.photoURL,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userChatInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: chat[1].userInfo.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_chat$1$lastMessage = chat[1].lastMessage) === null || _chat$1$lastMessage === void 0 ? void 0 : _chat$1$lastMessage.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, chat[0], true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"PKlfs5vVrJUUTja9B24kklI/GGk=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["doc","onSnapshot","React","useContext","useEffect","useState","AuthContext","ChatContext","db","Saved","jsxDEV","_jsxDEV","Chats","_s","_Object$entries","chats","setChats","currentUser","dispatch","getChats","unsub","uid","data","handleSelect","u","type","payload","handleCreateChat","chatId","setDoc","messages","users","userInfo","displayName","photoURL","lastMessage","prevChats","updatedChats","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","sort","a","b","date","map","chat","_chat$1$lastMessage","onClick","text","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/2023 projects/chat-app/src/components/Chats.jsx"],"sourcesContent":["import { doc, onSnapshot } from 'firebase/firestore';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport { db } from '../firebase';\nimport Saved from '../img/saved.jpeg';\n\nconst Chats = () => {\n  const [chats, setChats] = useState([]);\n\n  const { currentUser } = useContext(AuthContext);\n  const { dispatch } = useContext(ChatContext);\n\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, 'userChats', currentUser.uid), (doc) => {\n        setChats(doc.data());\n      });\n\n      return () => {\n        unsub();\n      };\n    };\n\n    currentUser.uid && getChats();\n  }, [currentUser.uid]);\n\n  const handleSelect = (u) => {\n    dispatch({ type: 'CHANGE_USER', payload: u });\n  };\n  const handleCreateChat = async () => {\n    const chatId = `${currentUser.uid}-${currentUser.uid}`;\n\n    // Create a new chat document in Firestore's \"chats\" collection with an empty \"messages\" array and a single user ID\n    await setDoc(doc(db, 'chats', chatId), {\n      messages: [],\n      users: [currentUser.uid],\n    });\n\n    // Create a new chat document in the \"userChats\" subcollection of the current user's document, with their display name, photo URL, and user ID\n    await setDoc(doc(db, 'userChats', currentUser.uid, 'chats', chatId), {\n      userInfo: {\n        displayName: currentUser.displayName,\n        photoURL: currentUser.photoURL,\n        uid: currentUser.uid,\n      },\n      lastMessage: null,\n    });\n\n    // Update the local \"chats\" state with the newly created chat\n    setChats((prevChats) => {\n      const updatedChats = { ...prevChats };\n      updatedChats[chatId] = {\n        userInfo: {\n          displayName: currentUser.displayName,\n          photoURL: currentUser.photoURL,\n          uid: currentUser.uid,\n        },\n        lastMessage: null,\n      };\n      return updatedChats;\n    });\n\n    // Select the newly created chat by dispatching a \"CHANGE_USER\" action with the chat's user object\n    dispatch({\n      type: 'CHANGE_USER',\n      payload: {\n        uid: currentUser.uid,\n        displayName: currentUser.displayName,\n        photoURL: currentUser.photoURL,\n      },\n    });\n  };\n\n  return (\n    <div className=\"chats\">\n      <div className=\"userChat\">\n        <img src={Saved} alt=\"\" />\n        <div className=\"userChatInfo\">\n          <span></span>\n          <p></p>\n        </div>\n      </div>\n      {Object.entries(chats)\n        ?.sort((a, b) => b[1].date - a[1].date)\n        .map((chat) => (\n          <div className=\"userChat\" key={chat[0]} onClick={() => handleSelect(chat[1].userInfo)}>\n            <img src={chat[1].userInfo.photoURL} alt=\"\" />\n            <div className=\"userChatInfo\">\n              <span>{chat[1].userInfo.displayName}</span>\n              <p>{chat[1].lastMessage?.text}</p>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Chats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}