{"ast":null,"code":"var _s = $RefreshSig$();\nimport { doc, serverTimestamp, setDoc } from 'firebase/firestore';\nimport { useContext, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { db } from '../firebase';\nimport { onSnapshot } from 'firebase/firestore';\nconst StatusUpdater = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (currentUser) {\n      const userRef = doc(db, 'userChats', currentUser.uid);\n      const unsubscribe = onSnapshot(userRef, doc => {\n        if (doc.exists()) {\n          setDoc(userRef, {\n            status: 'online',\n            lastSeen: serverTimestamp()\n          }, {\n            merge: true\n          });\n        }\n      });\n      return () => {\n        setDoc(userRef, {\n          status: 'offline',\n          lastSeen: serverTimestamp()\n        }, {\n          merge: true\n        });\n        unsubscribe();\n      };\n    }\n  }, [currentUser]);\n  return null;\n};\n_s(StatusUpdater, \"pPz2vEQ49HvItek0rBs6jbAJRpk=\");\n_c = StatusUpdater;\nexport default StatusUpdater;\nvar _c;\n$RefreshReg$(_c, \"StatusUpdater\");","map":{"version":3,"names":["doc","serverTimestamp","setDoc","useContext","useEffect","AuthContext","db","onSnapshot","StatusUpdater","_s","currentUser","userRef","uid","unsubscribe","exists","status","lastSeen","merge","_c","$RefreshReg$"],"sources":["/Users/admin/Downloads/2023 projects/chat-app/src/components/StatusUpdater.jsx"],"sourcesContent":["import { doc, serverTimestamp, setDoc } from 'firebase/firestore';\nimport { useContext, useEffect } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { db } from '../firebase';\nimport { onSnapshot } from 'firebase/firestore';\n\nconst StatusUpdater = () => {\n  const { currentUser } = useContext(AuthContext);\n\n  useEffect(() => {\n    if (currentUser) {\n      const userRef = doc(db, 'userChats', currentUser.uid);\n      const unsubscribe = onSnapshot(userRef, (doc) => {\n        if (doc.exists()) {\n          setDoc(userRef, { status: 'online', lastSeen: serverTimestamp() }, { merge: true });\n        }\n      });\n\n      return () => {\n        setDoc(userRef, { status: 'offline', lastSeen: serverTimestamp() }, { merge: true });\n        unsubscribe();\n      };\n    }\n  }, [currentUser]);\n\n  return null;\n};\n\nexport default StatusUpdater;\n"],"mappings":";AAAA,SAASA,GAAG,EAAEC,eAAe,EAAEC,MAAM,QAAQ,oBAAoB;AACjE,SAASC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAY,CAAC,GAAGP,UAAU,CAACE,WAAW,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,IAAIM,WAAW,EAAE;MACf,MAAMC,OAAO,GAAGX,GAAG,CAACM,EAAE,EAAE,WAAW,EAAEI,WAAW,CAACE,GAAG,CAAC;MACrD,MAAMC,WAAW,GAAGN,UAAU,CAACI,OAAO,EAAGX,GAAG,IAAK;QAC/C,IAAIA,GAAG,CAACc,MAAM,EAAE,EAAE;UAChBZ,MAAM,CAACS,OAAO,EAAE;YAAEI,MAAM,EAAE,QAAQ;YAAEC,QAAQ,EAAEf,eAAe;UAAG,CAAC,EAAE;YAAEgB,KAAK,EAAE;UAAK,CAAC,CAAC;QACrF;MACF,CAAC,CAAC;MAEF,OAAO,MAAM;QACXf,MAAM,CAACS,OAAO,EAAE;UAAEI,MAAM,EAAE,SAAS;UAAEC,QAAQ,EAAEf,eAAe;QAAG,CAAC,EAAE;UAAEgB,KAAK,EAAE;QAAK,CAAC,CAAC;QACpFJ,WAAW,EAAE;MACf,CAAC;IACH;EACF,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CApBID,aAAa;AAAAU,EAAA,GAAbV,aAAa;AAsBnB,eAAeA,aAAa;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}